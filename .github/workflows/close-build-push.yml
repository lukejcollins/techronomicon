name: techronomicon-prod-pr

on:
  pull_request:
    types: [closed]

permissions:
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'deploy')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}/techronomicon:latest

  update-ecs-service:
    needs: build-and-push
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'deploy')
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.PROD_AWS_REGION }}

      - name: Fetch running tasks
        id: get-running-tasks
        run: |
          tasks=$(aws ecs list-tasks --cluster ${{ secrets.PROD_ECS_CLUSTER_NAME }} --service-name ${{ secrets.PROD_ECS_SERVICE_NAME }} --desired-status RUNNING --query 'taskArns' --output text)
          echo "::set-output name=tasks::$tasks"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PROD_AWS_REGION }}

      - name: Stop running task
        if: steps.get-running-tasks.outputs.tasks != ''
        run: |
          for task in ${{ steps.get-running-tasks.outputs.tasks }}
          do
            aws ecs stop-task --cluster ${{ secrets.PROD_ECS_CLUSTER_NAME }} --task $task
          done
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PROD_AWS_REGION }}

  sync-s3-buckets:
    needs: build-and-push
    if: github.event.pull_request.merged == true && contains(github.event.pull_request.labels.*.name, 'deploy')
    runs-on: ubuntu-latest
    steps:
      - name: Sync S3 buckets
        run: |
          aws s3 sync s3://preprod-techronomiconstatic s3://techronomiconstatic --delete
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.PROD_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.PROD_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.PROD_AWS_REGION }}
